@use "@styles/extends/_hover-opacity";
@property --btn-gradient-start {
	syntax: "<color>";
	inherits: false;
	initial-value: #014fa2;
}

@property --btn-gradient-end {
	syntax: "<color>";
	inherits: false;
	initial-value: #0198df;
}

%btn-base {
	display: flex;
	width: 100%;
	min-width: 160px;
	max-width: fit-content;
	align-items: center;
	justify-content: space-between;
	gap: 20px;
	padding: 16px 24px;

	border-radius: 60px;
	border: none;

	background: linear-gradient(
		90deg,
		var(--btn-gradient-start),
		var(--btn-gradient-end)
	);

	color: var(--white-color);
	font-size: 16px;
	font-weight: 700;

	span {
		flex-grow: 1;
		text-align: center;
	}
}

%btn-effect {
	transition: --btn-gradient-start 1s, --btn-gradient-end 1s,
		opacity var(--main-transition);

	&:hover {
		--btn-gradient-start: #0198df;
		--btn-gradient-end: #014fa2;
	}
}

.btn {
	@extend %btn-base;

	&:not(.btn--static) {
		@extend %btn-effect;
	}

	&:has(.btn__icon-wrap) {
		padding: 6px;
		padding-left: 20px;
	}

	&__icon-wrap {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 28px;
		height: 28px;
		border-radius: 50%;
		background-color: var(--gray-color);

		svg {
			width: 16px;
			height: 16px;
			fill: var(--secondary-color);
		}
	}

	&--outlined {
		background: none;
		background-color: var(--white-color);
		border: 2px solid var(--gray-color);
		color: var(--primary-color);
		@extend %hover-opacity;

		span {
			padding-top: 2px;
		}
	}

	&--anchor {
		svg {
			transform: rotate(90deg);
		}
	}

	&.policy-btn {
		font-weight: 400;
		font-size: 14px;
		text-decoration: underline;
		text-underline-offset: 3px;
		border: none;
		padding: 0;
		background: none;
		color: var(--primary-color);
		@extend %hover-opacity;
	}
}

a.btn {
	padding-top: 18px;
}
